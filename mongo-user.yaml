---
- name: Configure MongoDB User
  hosts: n1
  become: true
  vars:
    mongodb_primary_ip: "172.31.86.23"
    mongodb_admin_user: "Eniola"
    mongodb_admin_password: "admin123!"
  tasks:
    - name: Install PyMongo (required for mongodb_user module)
      pip:
        name: pymongo
        executable: pip3
    
    - name: Check if authentication is enabled
      command: grep "authorization:" /etc/mongod.conf
      register: auth_status
      changed_when: false
      ignore_errors: true
    
    - name: Display authentication status
      debug:
        var: auth_status.stdout
    
    - name: Temporarily disable authentication if enabled
      block:
        - name: Update MongoDB config to disable auth temporarily
          replace:
            path: /etc/mongod.conf
            regexp: 'security:\n  authorization: enabled'
            replace: '# security section commented for initial user setup'
        
        - name: Restart MongoDB to apply configuration
          service:
            name: mongod
            state: restarted
        
        - name: Wait for MongoDB to restart
          wait_for:
            host: "{{ mongodb_primary_ip }}"
            port: 27017
            timeout: 30
      when: auth_status.stdout is defined and "enabled" in auth_status.stdout
    
    - name: Create admin user
      community.mongodb.mongodb_user:
        login_host: "{{ mongodb_primary_ip }}"
        login_port: 27017
        database: admin
        name: "{{ mongodb_admin_user }}"
        password: "{{ mongodb_admin_password }}"
        roles: "root"
        state: present
      register: user_creation
    
    - name: Re-enable security after user creation
      block:
        - name: Update MongoDB config to enable auth
          replace:
            path: /etc/mongod.conf
            regexp: '# security section commented for initial user setup'
            replace: 'security:\n  authorization: enabled'
        
        - name: Restart MongoDB to apply configuration
          service:
            name: mongod
            state: restarted
      when: auth_status.stdout is defined and "enabled" in auth_status.stdout and user_creation.changed
...