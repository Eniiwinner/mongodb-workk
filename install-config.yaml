---
- name: Install and Configure MongoDB and Node.js on CentOS 9
  hosts: n1
  become: true
  vars:
    mongodb_bind_ip: "3.86.98.40"
    mongodb_admin_user: "Eniola"
    mongodb_admin_password: "admin123!"
    node_project_path: "/var/www/devops-api"
    node_version: "18.x"

  tasks:

    - name: Add MongoDB GPG key
      rpm_key:
        state: present
        key: "https://www.mongodb.org/static/pgp/server-7.0.asc"

    - name: Add MongoDB repository
      yum_repository:
        name: mongodb-org-7.0
        description: MongoDB Repository
        baseurl: https://repo.mongodb.org/yum/redhat/9/mongodb-org/7.0/x86_64/
        gpgcheck: yes
        gpgkey: https://www.mongodb.org/static/pgp/server-7.0.asc
        enabled: yes

    - name: Install MongoDB packages
      dnf:
        name:
          - mongodb-org
          - mongodb-org-server
          - mongodb-mongosh
          - mongodb-database-tools
        state: present

    - name: Create custom MongoDB config directory
      file:
        path: /etc/mongod.conf.d
        state: directory
        mode: 0755

    - name: Configure MongoDB
      template:
        src: db.j2
        dest: /etc/db.conf
        owner: root
        group: root
        mode: 0644
      notify: restart mongod

    - name: Start and enable MongoDB service
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Install PyMongo dependency
      block:
        - name: Install pip (if not present)
          dnf:
            name: python3-pip
            state: present

        - name: Install PyMongo using pip
          pip:
            name: pymongo
            executable: pip3
          register: pip_install
          until: pip_install is succeeded
          retries: 3
          delay: 5

    - name: Add NodeSource repository
      shell: |
        curl -fsSL https://rpm.nodesource.com/setup_{{ node_version }} | bash -
      args:
        executable: /bin/bash
      register: nodesource_setup
      changed_when: "'Run as root' not in nodesource_setup.stdout"

    - name: Install Node.js and npm
      dnf:
        name: nodejs
        state: present
        disable_gpg_check: yes
      when: nodesource_setup is succeeded

    - name: Verify Node.js installation
      command: node --version
      register: node_version_check
      changed_when: false

    - name: Create Node.js project directory
      file:
        path: "{{ node_project_path }}"
        state: directory
        mode: 0755
        owner: nodeuser
        group: nodeuser

    - name: Deploy package.json
      copy:
        dest: "{{ node_project_path }}/package.json"
        content: |
          {
            "name": "devops-api",
            "version": "1.0.0",
            "main": "index.js",
            "scripts": {
              "start": "node index.js",
              "seed": "node init.js"
            },
            "dependencies": {
              "express": "^4.18.2",
              "mongoose": "^7.2.2"
            }
          }
        owner: nodeuser
        group: nodeuser
        mode: 0644

    - name: Install project dependencies
      npm:
        path: "{{ node_project_path }}"
        state: present
      when: node_version_check.rc == 0

    - name: Install nodemon globally (for development)
      npm:
        name: nodemon
        global: yes
        state: present
      when: node_version_check.rc == 0

    - name: Create admin user
      community.mongodb.mongodb_user:
        login_host: "127.0.0.1"
        login_port: 27017
        database: admin
        name: "{{ mongodb_admin_user }}"
        password: "{{ mongodb_admin_password }}"
        roles: "root"
        state: present
        update_password: always
      register: user_creation
      retries: 5
      delay: 10
      until: user_creation is succeeded

    - name: Update test page
      template:
        src: html.j2
        dest: /var/www/html/test.html

  handlers:
    - name: restart mongod
      service:
        name: mongod
        state: restarted
...