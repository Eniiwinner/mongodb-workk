---
- name: Install and Deploy MongoDB with Node.js App
  hosts: n1
  become: true
  vars:
    mongodb_bind_ip: "127.0.0.1"
    mongodb_admin_user: "Eniola"
    mongodb_admin_password: "admin123!"
    node_project_path: "/var/www/nodeapp"
    node_version: "18.x"
    node_user: "{{ ansible_user_id }}"
    app_repo: "https://github.com/Eniiwinner/mongodb-workk.git"
    app_branch: "main"
    mongodb_connection_timeout: 120  
    mongodb_config_file: "/etc/db.conf"

  tasks:
    - name: Add MongoDB GPG key
      rpm_key:
        state: present
        key: "https://www.mongodb.org/static/pgp/server-7.0.asc"

    - name: Add MongoDB repository
      yum_repository:
        name: mongodb-org-7.0
        description: MongoDB Repository
        baseurl: https://repo.mongodb.org/yum/redhat/9/mongodb-org/7.0/x86_64/
        gpgcheck: yes
        gpgkey: https://www.mongodb.org/static/pgp/server-7.0.asc
        enabled: yes

    - name: Install MongoDB packages
      dnf:
        name:
          - mongodb-org
          - mongodb-org-server
          - mongodb-mongosh
          - mongodb-database-tools
        state: present

    - name: Ensure MongoDB data directory exists
      file:
        path: /var/lib/mongo
        state: directory
        owner: mongod
        group: mongod
        mode: 0755

    - name: Configure MongoDB
      template:
        src: db.j2
        dest: "{{ mongodb_config_file }}"
        owner: root
        group: root
        mode: 0644
      notify: restart mongod

    - name: Create systemd override directory
      file:
        path: /etc/systemd/system/mongod.service.d
        state: directory
        mode: 0755

    - name: Create systemd override to use custom config
      blockinfile:
        path: /etc/systemd/system/mongod.service.d/override.conf
        create: yes
        block: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/mongod --config {{ mongodb_config_file }}
      notify:
        - daemon-reload
        - restart mongod

    - name: Start and enable MongoDB service
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Wait for MongoDB to become available
      wait_for:
        host: "{{ mongodb_bind_ip }}"
        port: 27017
        timeout: "{{ mongodb_connection_timeout }}"
        delay: 10
      register: mongo_ready
      until: mongo_ready is succeeded
      retries: 5

    - name: Create admin user
      community.mongodb.mongodb_user:
        login_host: "{{ mongodb_bind_ip }}"
        login_port: 27017
        database: admin
        name: "{{ mongodb_admin_user }}"
        password: "{{ mongodb_admin_password }}"
        roles: "root"
        state: present
        update_password: always
      register: user_creation
      retries: 10
      delay: 15
      until: user_creation is succeeded

  handlers:
    - name: daemon-reload
      systemd:
        daemon_reload: yes

    - name: restart mongod
      service:
        name: mongod
        state: restarted
...